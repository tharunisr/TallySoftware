@model List<TallySoftware.Entity.EnquiryEntity>
@{
    ViewBag.Title = "Admin";
    //Layout = "~/Views/Shared/LayoutPage1.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    @using(Html.BeginForm("AdminDashboard", "Staff", FormMethod.Get)){


        <div class=" my-3 d-flex justify-content-between container-fluid">
            <div class="d-flex justify-content-between w-25">
        @Html.DropDownList("status", new SelectListItem[]
        { new SelectListItem() { Text = "All", Value = "All", Selected=true },
        new SelectListItem() { Text = "Approved", Value = "Approved" },
        new SelectListItem() { Text = "Denied", Value = "Denied" },
        new SelectListItem() { Text = "Pending", Value = "Pending"}})
     
        @Html.DropDownList("recruitment", new SelectListItem[]
        { new SelectListItem() { Text = "All", Value = "All", Selected=true },
        new SelectListItem() { Text = "Sales", Value = "Sales" },
        new SelectListItem() { Text = "Service", Value = "Service" },
        new SelectListItem() { Text = "Amc", Value = "Amc"}})
        </div>
            <div class="d-flex justify-content-between">
                <input class="form-control me-2" type="text"  name="search">
           
        <button type="submit" value="submit" class="btn btn-primary">Apply</button>
                
        </div>
       
            </div>
    
    }
    <div class="table-responsive">
    <table class="table table-bordered">
        <tr class="table-secondary text-center">
            <th>SI.No</th>
            <th>Name</th>
            <th>Phone Number</th>
            <th>Recruitment</th>
            <th>Remarks</th>
            <th>Status</th>
            <th>Schedule</th>
            <th>Amount</th>
        </tr>
        @if (Model.Count > 0)
        {
            int count = 1;
            @foreach (var i in Model)
            {
                <tr>
                    <td>@count</td>
                    <td>@Html.DisplayFor(temp => i.Customer.Name)</td>
                    <td>@Html.DisplayFor(temp => i.Customer.PhoneNumber)</td>
                    <td>@Html.DisplayFor(temp => i.Recruitment)</td>
                    <td>@Html.DisplayFor(temp => i.Remark)</td>
                        <td>
                            @if (i.Status == "Approved")
                            {
                                <span class="badge bg-success">@Html.DisplayFor(temp => i.Status)</span>
                            }
                            else if (i.Status == "Pending")
                            {
                                <span class="badge bg-warning">@Html.DisplayFor(temp => i.Status)</span>
                            }
                            else if (i.Status == "Denied")
                            {
                                <span class="badge bg-danger">@Html.DisplayFor(temp => i.Status)</span>
                            }
                        </td>
                   @*  <td>@Html.DisplayFor(temp => i.Status)</td> *@
                    <td>@Html.DisplayFor(temp => i.Schedule)</td>
                    <td>@Html.DisplayFor(temp => i.Payment)</td>
                    @* <td>
                        @if (i.Status == "Approved")
                        {
                            <span class="badge bg-success">@Html.DisplayFor(temp => i.Status)</span>
                        }
                        else if (i.Status == "Pending")
                        {
                            <span class="badge bg-warning">@Html.DisplayFor(temp => i.Status)</span>
                        }
                        else if (i.Status == "Denied")
                        {
                            <span class="badge bg-danger">@Html.DisplayFor(temp => i.Status)</span>
                        }
                    </td>
                    <td>@Html.DisplayFor(temp => i.NumberOfDays)</td>

                    <td>
                        <button type="button" class="btn btn-outline-success" onclick="location.href='@Url.Action("ApproveLeave", "Leave", new { leaveId =i.LeaveId })'">Approve</button>
                        <button type="button" class="btn btn-outline-danger" onclick="location.href='@Url.Action("DenyLeave","Leave",new { leaveId = i.LeaveId})'">Deny</button>

                    </td> *@
                    </tr>
                    count++;
                }
        }
        else{
            <tr>
                <td colspan="7" class="text-center text-danger fw-bold">Customers Not Found</td>
            </tr>
        }

           

    </table>
    </div>
</body>
</html>
